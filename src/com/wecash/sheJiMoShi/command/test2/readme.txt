    任何模式的出现，都是为了解决一些特定的场景的耦合问题，以达到对修改封闭，对扩展开放的效果。命令模式也不例外：
命令模式是为了解决命令的请求者和命令的实现者之间的耦合关系。
经典的命令模式包括4个角色：

Command：定义命令的统一接口
ConcreteCommand：Command接口的实现者，用来执行具体的命令，某些情况下可以直接用来充当Receiver。
Receiver：命令的实际执行者
Invoker：命令的请求者，是命令模式中最重要的角色。这个角色用来对各个命令进行控制。


通过对上面的分析我们可以知道如下几点：
1. 命令模式是通过命令发送者和命令执行者的解耦来完成对命令的具体控制的。
2. 命令模式是对功能方法的抽象，并不是对对象的抽象。
3. 命令模式是将功能提升到对象来操作，以便对多个功能进行一系列的处理以及封装。